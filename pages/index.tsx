import type { NextPage } from 'next'
import { GetServerSideProps } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useState } from 'react'
import TableDefault from '../components/TableDefault'
import { Book, Category } from '../types'

export const getServerSideProps: GetServerSideProps = async (context) => {
  const res = await fetch("https://asia-southeast2-sejutacita-app.cloudfunctions.net/fee-assessment-categories");
  const categories: Category[] = await res.json();

  console.log('====================================');
  console.log(categories);
  console.log('====================================');

  return {
    props: {
      categories: categories
    },
  }
}

const Home: NextPage<{ categories: Category[] }> = ({ categories }) => {

  const [books, setBooks] = useState<Book[]>()
  const [errorMessage, setErrorMessage] = useState<string>("")

  const fetchBooksByCategory = async (id: number) => {
    try {
      const res = await fetch(`https://asia-southeast2-sejutacita-app.cloudfunctions.net/fee-assessment-books?categoryId=${id}`, {
        headers: {
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Origin": "localhost:3000"
        }
      });
      const bookResult = await res.json();

      console.log('====================================');
      console.log(bookResult);
      console.log('====================================');

      setBooks(bookResult)
    } catch (error) {
      console.log(error)
      setErrorMessage("Failed to fetch books")
    }
  }


  return (
    <div>
      <Head>
        <title>Deall Jobs Test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <p className="text-center text-4xl font-bold my-12">Choose Category</p>

      <div className="flex flex-col lg:flex-row justify-around gap-4">
        {categories.map((category) => (
          <button className="btn btn-primary"  key={category.id} onClick={ () => fetchBooksByCategory(category.id) }>
            {category.name}
          </button>
        ))}
      </div>

      <ul>
      {books && books.length > 0 ? books.map((book) => (
        <li key={ book.id }>
            {book.title}
          </li>
      )): null}
      </ul>

      {errorMessage != "" ? (
        <p className="text-center text-red-500 font-semibold my-12">{ errorMessage }</p>
      ) : ""}

      <TableDefault />

    </div>
  )


}

export default Home
